---
name: Bazel CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  setup:
    name: Setup and Cache Bazel
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Bazel
        uses: bazelbuild/setup-bazelisk@v3

      - name: Restore Bazel Cache
        uses: actions/cache@v4
        with:
          path: ~/.cache/bazel
          key: bazel-cache-${{ github.ref }}-${{ github.sha }}
          restore-keys: |
            bazel-cache-${{ github.ref }}-
            bazel-cache-

      # - name: Warm up Bazel Cache
      #   run: bazel build //... || true

      - name: Save Bazel Cache
        if: always()
        run: bazel shutdown

  bazel-build:
    name: Build all targets
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Restore Bazel Cache
        uses: actions/cache@v4
        with:
          path: ~/.cache/bazel
          key: bazel-cache-${{ github.ref }}-${{ github.sha }}
          restore-keys: |
            bazel-cache-${{ github.ref }}-
            bazel-cache-

      - name: Build all targets
        run: bazel build //...

      - name: Save Bazel Cache
        if: always()
        run: bazel shutdown

  bazel-test:
    name: Run Bazel Tests
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Restore Bazel Cache
        uses: actions/cache@v4
        with:
          path: ~/.cache/bazel
          key: bazel-cache-${{ github.ref }}-${{ github.sha }}
          restore-keys: |
            bazel-cache-${{ github.ref }}-
            bazel-cache-

      - name: Run Bazel tests
        run: bazel test //...

      - name: Save Bazel Cache
        if: always()
        run: bazel shutdown

  format-check:
    name: Run Format Check
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Restore Bazel Cache
        uses: actions/cache@v4
        with:
          path: ~/.cache/bazel
          key: bazel-cache-${{ github.ref }}-${{ github.sha }}
          restore-keys: |
            bazel-cache-${{ github.ref }}-
            bazel-cache-

      - name: Run Format Check
        run: bazel run //:format.check

      - name: Save Bazel Cache
        if: always()
        run: bazel shutdown




# ---

# name: Bazel CI

# on:
#   push:
#     branches:
#       - main
#   pull_request:
#     branches:
#       - main

# jobs:
#   setup:
#     name: Setup Bazel
#     runs-on: ubuntu-latest
#     outputs:
#       cache-key: ${{ steps.cache-key.outputs.cache-key }}
#     steps:
#       - name: Checkout repository
#         uses: actions/checkout@v4

#       - name: Determine Cache Key
#         id: cache-key
#         run: |
#           echo "cache-key=$(echo ${{ runner.os }}-bazel-$(git ls-files -o -m | sha256sum | cut -d' ' -f1))" >> $GITHUB_ENV

#       - name: Set up Bazel
#         uses: bazelbuild/setup-bazelisk@v3

#   bazel-build:
#     name: Build all targets
#     needs: setup
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout repository
#         uses: actions/checkout@v4

#       - name: Restore Bazel Cache
#         uses: actions/cache@v3
#         with:
#           path: ~/.cache/bazel
#           key: ${{ needs.setup.outputs.cache-key }}
#           restore-keys: |
#             ${{ runner.os }}-bazel-

#       - name: Build all targets
#         run: bazel build //...

#       - name: Save Bazel Cache
#         if: always()
#         uses: actions/cache@v3
#         with:
#           path: ~/.cache/bazel
#           key: ${{ needs.setup.outputs.cache-key }}

#   bazel-test:
#     name: Run Bazel Tests
#     needs: setup
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout repository
#         uses: actions/checkout@v4

#       - name: Restore Bazel Cache
#         uses: actions/cache@v3
#         with:
#           path: ~/.cache/bazel
#           key: ${{ needs.setup.outputs.cache-key }}
#           restore-keys: |
#             ${{ runner.os }}-bazel-

#       - name: Run Bazel tests
#         run: bazel test //...

#       - name: Save Bazel Cache
#         if: always()
#         uses: actions/cache@v3
#         with:
#           path: ~/.cache/bazel
#           key: ${{ needs.setup.outputs.cache-key }}

#   format-check:
#     name: Run Format Check
#     needs: setup
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout repository
#         uses: actions/checkout@v4

#       - name: Restore Bazel Cache
#         uses: actions/cache@v3
#         with:
#           path: ~/.cache/bazel
#           key: ${{ needs.setup.outputs.cache-key }}
#           restore-keys: |
#             ${{ runner.os }}-bazel-

#       - name: Run Format Check
#         run: bazel run //:format.check

#       - name: Save Bazel Cache
#         if: always()
#         uses: actions/cache@v3
#         with:
#           path: ~/.cache/bazel
#           key: ${{ needs.setup.outputs.cache-key }}




# ---
# name: Bazel CI

# on:
#   push:
#     branches:
#       - main
#   pull_request:
#     branches:
#       - main

# jobs:
#   bazel-test:
#     name: Run Bazel Tests
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout repository
#         uses: actions/checkout@v4

#       - name: Set up Bazel
#         uses: bazelbuild/setup-bazelisk@v3

#       - name: Run Bazel tests
#         run: bazel test //...

#   bazel-build:
#     name: Build all targets
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout repository
#         uses: actions/checkout@v4

#       - name: Set up Bazel
#         uses: bazelbuild/setup-bazelisk@v3

#       - name: Build all targets
#         run: bazel build //...

#   format-check:
#     name: Run Format Check
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout repository
#         uses: actions/checkout@v4

#       - name: Set up Bazel
#         uses: bazelbuild/setup-bazelisk@v3

#       - name: Run Format Check
#         run: bazel run //:format.check



# ---
# name: Bazel CI

# on:
#   push:
#     branches:
#       - main
#   pull_request:
#     branches:
#       - main

# jobs:
#   build_and_test_ubuntu:
#     name: Linux Ubuntu 20.04 Bazel build <GCC 9.3.0>
#     runs-on: ubuntu-20.04

#     steps:
#     - uses: actions/checkout@v3

#     - name: Mount bazel cache
#       uses: actions/cache@v3
#       with:
#         path: "/home/runner/.cache/bazel"
#         key: bazel

#     - name: Build and Test
#       run: |
#         bazel build //...
#         bazel test //...


